/// <reference path="./global.d.ts" />

import { BaseTexture } from '@pixi/core';
import { ISkeletonParser } from '@pixi-spine/base';
import { Loader } from '@pixi/loaders';
import { LoaderResource } from '@pixi/loaders';
import { Texture } from '@pixi/core';
import { TextureAtlas } from '@pixi-spine/base';

/**
 * @public
 */
export declare abstract class AbstractSpineParser {
    abstract createJsonParser(): ISkeletonParser;
    abstract createBinaryParser(): ISkeletonParser;
    abstract parseData(resource: LoaderResource, parser: ISkeletonParser, atlas: TextureAtlas, dataToParse: any): void;
    genMiddleware(): {
        use(this: Loader, resource: LoaderResource, next: () => any): any;
    };
}

/**
 * @public
 */
export declare function imageLoaderAdapter(loader: any, namePrefix: any, baseUrl: any, imageOptions: any): (line: string, callback: (baseTexture: BaseTexture) => any) => void;

/**
 * @public
 */
export declare function staticImageLoader(pages: {
    [key: string]: (BaseTexture | Texture);
}): (line: any, callback: any) => void;

/**
 * @public
 */
export declare function syncImageLoaderAdapter(baseUrl: any, crossOrigin: any): (line: any, callback: any) => void;

export { }
